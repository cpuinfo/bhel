[1/10] Performing build step for 'bootloader'
[1/1] cd /mahi/demos/bhel/work/bhel/emblinux/rtos/build/bootloader/esp-idf/esptool_py && /home/maker/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/maker/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /mahi/demos/bhel/work/bhel/emblinux/rtos/build/bootloader/bootloader.bin
Bootloader binary size 0x66e0 bytes. 0x920 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/bhel_rtos.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable bhel_rtos.elf
[6/8] Generating binary image from built executable
esptool.py v4.3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /mahi/demos/bhel/work/bhel/emblinux/rtos/build/bhel_rtos.bin
[7/8] cd /mahi/demos/bhel/work/bhel/emblinux/rtos/build/esp-idf/esptool_py && /home/maker/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/maker/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /mahi/demos/bhel/work/bhel/emblinux/rtos/build/partition_table/partition-table.bin /mahi/demos/bhel/work/bhel/emblinux/rtos/build/bhel_rtos.bin
bhel_rtos.bin binary size 0x2b250 bytes. Smallest app partition is 0x100000 bytes. 0xd4db0 bytes (83%) free.
[7/8] cd /home/maker/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/maker/esp/esp-idf -D "SERIAL_TOOL=/home/maker/.espressif/python_env/idf5.1_py3.8_env/bin/python;;/home/maker/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/mahi/demos/bhel/work/bhel/emblinux/rtos/build -P /home/maker/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 bhel_rtos.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.3
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: bc:dd:c2:d1:d5:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26336 bytes to 16375...
Writing at 0x00001000... (100 %)
Wrote 26336 bytes (16375 compressed) at 0x00001000 in 0.8 seconds (effective 277.3 kbit/s)...
Hash of data verified.
Compressed 176720 bytes to 93465...
Writing at 0x00010000... (16 %)
Writing at 0x0001b449... (33 %)
Writing at 0x00020d5e... (50 %)
Writing at 0x00026519... (66 %)
Writing at 0x0002f002... (83 %)
Writing at 0x00036edd... (100 %)
Wrote 176720 bytes (93465 compressed) at 0x00010000 in 2.5 seconds (effective 573.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 438.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
